var fs = require('fs');

var directory = function(packageName, modulesDirectory){ //true(descention), false/undefined(process), <string>(the explicit dir)
    var rootName = packageName.split('/').shift();
    var directories;
    switch(typeof modulesDirectory){
        case 'string' :
            directories = [modulesDirectory];
            break;
        case 'array' :
            directories = modulesDirectory;
            break;
        default :
            switch(modulesDirectory){
                case true:
                    directories = descention_directories();
                    break;
                case false:
                    directories = process_directories();
                    break;
                default:
                    directories = descention_directories();
                    process_directories().forEach(function(dir){
                        if(directories.indexOf(dir) == -1) directories.push(dir)
                    });
            }
    }
    var result = '';
    directories.forEach(function(path){
        if(result) return;
        var fullPath = path+'/'+rootName;
        if(fs.existsSync(fullPath) && !result) result = path;
    });
    return result;
};

var descention_directories = function(){
    var root = (process.cwd()).split('/');
    var results = [];
    while(root.length > 0){
        var candidate = root.join("/")+'/node_modules';
        if(candidate !== '/node_modules') results.push(candidate);
        root.pop();
    }
    return results;
};

var process_directories = function(){
    return process.mainModule.paths;
};

var manifest = function(packageName, modulesDirectory){
    var dir = directory(packageName, modulesDirectory);
    var rootName = packageName.split('/').shift();
    try{
        result = require(packageName+'/package');
    }catch(ex){
        var result;
        var file = packageName+'.js'; //the file just hanging out in node_modules(or it's an unregistered subfile)
        if(fs.existsSync(dir+'/'+file)){
            result = {
                'main' : file.replace(rootName+'/', ''),
                'name' : rootName,
                'autogenerated' : true
            };
        }
    }
    result.base_directory = dir;
    return result;
}
module.exports = manifest;